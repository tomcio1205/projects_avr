Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodqi4.o)
                              ./USART.o (__udivmodqi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                              ./USART.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
LOAD ./USART.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x29c
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x16 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                0x0000000000000032                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000048        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000000000004c        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x000000000000004c                __vector_1
                0x000000000000004c                __vector_12
                0x000000000000004c                __bad_interrupt
                0x000000000000004c                __vector_6
                0x000000000000004c                __vector_3
                0x000000000000004c                __vector_11
                0x000000000000004c                __vector_13
                0x000000000000004c                __vector_17
                0x000000000000004c                __vector_7
                0x000000000000004c                __vector_5
                0x000000000000004c                __vector_4
                0x000000000000004c                __vector_9
                0x000000000000004c                __vector_2
                0x000000000000004c                __vector_15
                0x000000000000004c                __vector_8
                0x000000000000004c                __vector_14
                0x000000000000004c                __vector_10
                0x000000000000004c                __vector_16
                0x000000000000004c                __vector_18
 .text          0x000000000000004e        0x0 ./USART.o
 .text          0x000000000000004e        0x0 ./main.o
 .text          0x000000000000004e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodqi4.o)
 .text          0x000000000000004e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x000000000000004e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text          0x000000000000004e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                0x000000000000004e                . = ALIGN (0x2)
 *(.text.*)
 .text.initUSART
                0x000000000000004e       0x12 ./USART.o
                0x000000000000004e                initUSART
 .text.transmitByte
                0x0000000000000060        0x8 ./USART.o
                0x0000000000000060                transmitByte
 .text.receiveByte
                0x0000000000000068        0x8 ./USART.o
                0x0000000000000068                receiveByte
 .text.printString
                0x0000000000000070       0x24 ./USART.o
                0x0000000000000070                printString
 .text.readString
                0x0000000000000094       0x56 ./USART.o
                0x0000000000000094                readString
 .text.printByte
                0x00000000000000ea       0x28 ./USART.o
                0x00000000000000ea                printByte
 .text.printWord
                0x0000000000000112       0x64 ./USART.o
                0x0000000000000112                printWord
 .text.printBinaryByte
                0x0000000000000176       0x50 ./USART.o
                0x0000000000000176                printBinaryByte
 .text.nibbleToHexCharacter
                0x00000000000001c6        0xc ./USART.o
                0x00000000000001c6                nibbleToHexCharacter
 .text.printHexByte
                0x00000000000001d2       0x18 ./USART.o
                0x00000000000001d2                printHexByte
 .text.getNumber
                0x00000000000001ea       0x46 ./USART.o
                0x00000000000001ea                getNumber
 .text.main     0x0000000000000230       0x28 ./main.o
                0x0000000000000230                main
 .text.libgcc   0x0000000000000258       0x18 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodqi4.o)
                0x0000000000000258                __udivmodqi4
 .text.libgcc   0x0000000000000270       0x28 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000000270                __udivmodhi4
 .text.libgcc   0x0000000000000298        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000298        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                0x0000000000000298                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000298        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                0x0000000000000298                exit
                0x0000000000000298                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000298        0x4 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000029c                _etext = .

.data           0x0000000000800060       0x5c load address 0x000000000000029c
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 ./USART.o
 .data          0x0000000000800060       0x5c ./main.o
 .data          0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodqi4.o)
 .data          0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .data          0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00000000008000bc                . = ALIGN (0x2)
                0x00000000008000bc                _edata = .
                0x00000000008000bc                PROVIDE (__data_end, .)

.bss            0x00000000008000bc        0x0
                0x00000000008000bc                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .bss           0x00000000008000bc        0x0 ./USART.o
 .bss           0x00000000008000bc        0x0 ./main.o
 .bss           0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodqi4.o)
 .bss           0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .bss           0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 *(.bss*)
 *(COMMON)
                0x00000000008000bc                PROVIDE (__bss_end, .)
                0x000000000000029c                __data_load_start = LOADADDR (.data)
                0x00000000000002f8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000bc        0x0
                0x00000000008000bc                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000bc                PROVIDE (__noinit_end, .)
                0x00000000008000bc                _end = .
                0x00000000008000bc                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(szeregowy.elf elf32-avr)
LOAD linker stubs
